"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const use_event_callback_1 = __importDefault(require("./use-event-callback"));
const use_event_listener_1 = __importDefault(require("./use-event-listener"));
const parseJSON = (value) => {
    try {
        return value === "undefined" ? undefined : JSON.parse(value !== null && value !== void 0 ? value : "");
    }
    catch (_a) {
        return undefined;
    }
};
const useLocalStorage = (key, initialValue) => {
    const readValue = (0, react_1.useCallback)(() => {
        if (typeof window === "undefined") {
            return initialValue;
        }
        try {
            const item = window.localStorage.getItem(key);
            return item ? parseJSON(item) : initialValue;
        }
        catch (error) {
            return initialValue;
        }
    }, [initialValue, key]);
    const [storedValue, setStoredValue] = (0, react_1.useState)(readValue);
    const setValue = (0, use_event_callback_1.default)(value => {
        try {
            const newValue = value instanceof Function ? value(storedValue) : value;
            window.localStorage.setItem(key, JSON.stringify(newValue));
            setStoredValue(newValue);
            window.dispatchEvent(new Event("local-storage"));
        }
        catch (error) { }
    });
    (0, react_1.useEffect)(() => {
        setStoredValue(readValue());
    }, []);
    const handleStorageChange = (0, react_1.useCallback)((event) => {
        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {
            return;
        }
        setStoredValue(readValue());
    }, [key, readValue]);
    (0, use_event_listener_1.default)("storage", handleStorageChange);
    (0, use_event_listener_1.default)("local-storage", handleStorageChange);
    return [storedValue, setValue];
};
exports.default = useLocalStorage;
//# sourceMappingURL=use-local-storage.js.map