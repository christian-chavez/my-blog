(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@alxshelepenok/diesel'), require('@alxshelepenok/react-hooks')) :
    typeof define === 'function' && define.amd ? define(['exports', '@alxshelepenok/diesel', '@alxshelepenok/react-hooks'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["diesel-extensions"] = {}, global["@alxshelepenok/diesel"], global["@alxshelepenok/react-hooks"]));
})(this, (function (exports, diesel, reactHooks) { 'use strict';

    const toKebabCase = (str = "") => {
        var _a;
        return ((_a = str
            .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) === null || _a === void 0 ? void 0 : _a.map(word => word.toLowerCase()).join("-")) || "";
    };

    const useCoilPersistedState = (coilValue, keyPrefix = "diesel:") => {
        const [value, setValue] = diesel.useCoilState(coilValue);
        const [persistedValue, setPersistedValue] = reactHooks.useLocalStorage(keyPrefix.concat(toKebabCase(coilValue.key)), value);
        return [
            persistedValue,
            (nextValue) => {
                setPersistedValue(nextValue);
                return setValue(value);
            },
        ];
    };

    exports.useCoilPersistedState = useCoilPersistedState;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=diesel-extensions.umd.js.map
